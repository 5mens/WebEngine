@typeparam TItem
@inject IDbContextFactory<AppDbContext> DbFactory
<_ButtonBlock IsVisible="@BtnIsVisible"
              IsVisibleAdd="@BtnIsVisibleAdd"
              IsVisibleEdit="@BtnIsVisibleEdit"
              IsVisibleDelete="@BtnIsVisibleDelete"
              BtnAddLink="@BtnAddLink"
              BtnEditLink="@BtnEditLink"
              BtnDeleteLink="@BtnDeleteLink" />
<div class="tab-content" id="orders-table-tab-content">
    <div class="tab-pane fade show active" id="orders-all" role="tabpanel" aria-labelledby="orders-all-tab">
        <div class="app-card app-card-orders-table shadow-sm mb-5">
            <div class="app-card-body">
                <div class="table-responsive">
                    <table class="table app-table-hover mb-0 text-left">
                        <thead>
                            <tr>@TableHeader</tr>
                        </thead>
                        <tbody>
                            @if (Items == null)
                            {
                                <tr>Загрузка данных...</tr>
                            }
                            else if (Items.Count == 0)
                            {
                                <tr>Нет данных</tr>
                            }
                            else
                            {
                                @foreach (var item in Items)
                                {
                                    <tr>@RowTemplate(item)</tr>
                                }
                            }
                        </tbody>
                    </table>
                </div><!--//table-responsive-->
            </div><!--//app-card-body-->
        </div><!--//app-card-->
        <_TablePagination />
    </div><!--//tab-pane-->
</div><!--//tab-content-->

@code {
    [Parameter]
    public RenderFragment TableHeader { get; set; }
    [Parameter]
    public RenderFragment<TItem> RowTemplate { get; set; }
    [Parameter]
    public IReadOnlyList<TItem> Items { get; set; }
    [Parameter]
    public bool BtnIsVisible { get; set; } = true;
    [Parameter]
    public bool BtnIsVisibleAdd { get; set; } = true;
    [Parameter]
    public bool BtnIsVisibleEdit { get; set; } = true;
    [Parameter]
    public bool BtnIsVisibleDelete { get; set; } = true;
    [Parameter]
    public string BtnAddLink { get; set; } = "#";
    [Parameter]
    public string BtnEditLink { get; set; } = "#";
    [Parameter]
    public string BtnDeleteLink { get; set; } = "#";
}
