@page "/administrator/dictionary/ingredients"
<MudPaper Class="ma-6" Elevation="0">
    <MudText Typo="Typo.h5">Справочник ингредиентов</MudText>
</MudPaper>
<MudDivider DividerType="DividerType.FullWidth" />
<MudPaper Class="ma-6" Elevation="0">
    <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Add" Color="Color.Primary" Size="Size.Medium">Создать</MudButton>
    <MudButton Class="mx-2" Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Edit" Size="Size.Medium">Изменить</MudButton>
    <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Delete" Color="Color.Error" Size="Size.Medium">Удалить</MudButton>
</MudPaper>
<MudTable Items="@Categories" Hover="true" Dense="true" Breakpoint="Breakpoint.Sm" Class="table app-table-hover ma-6 text-left" Elevation="0" >    
    <ColGroup>
        <col style="width:50px;" />
        <col />
    </ColGroup>
    <HeaderContent>
        <MudTh></MudTh>
        <MudTh>Наименование</MudTh>
    </HeaderContent>
    <RowTemplate>
        <MudTd>
            <MudToggleIconButton Size="Size.Small" ToggledSize="Size.Small" ToggledIcon="@Icons.Material.Filled.Remove" Icon="@Icons.Material.Filled.Add" ToggledColor="@Color.Error" Color="@Color.Info" >@*@((context.ShowDetails == true)? "Hide" : "Show")*@</MudToggleIconButton>
        </MudTd>
        <MudTd DataLabel="Name"><b>@context.Name</b></MudTd>
    </RowTemplate>
    <ChildRowContent>
        @if (true)
        {
            <MudTr>
                <td colspan="2">
                    <MudTable Items="@context.Ingredients" Dense="true" Context="CategoryContext" Hover="true" Breakpoint="Breakpoint.Sm" Elevation="0" MultiSelection="true" @bind-SelectedItems="selectedItems" Filter="new Func<Ingredient,bool>(FilterFunc)">
                        <ColGroup>
                            <col style="width:50px;" />
                            <col style="width:100px;" />
                            <col />
                            <col />
                            <col />
                        </ColGroup>
                        <RowTemplate>
                            <MudTd></MudTd>
                            <MudTd></MudTd>
                            <MudTd DataLabel="Name">@CategoryContext.Name</MudTd>
                            <MudTd DataLabel="Name">@CategoryContext.Desc</MudTd>
                        </RowTemplate>
                    </MudTable>
                </td>
            </MudTr>
        }
    </ChildRowContent>
</MudTable>

@code{
    private static IEnumerable<IngredientCategory> Categories { get; set; }
    private static IEnumerable<Ingredient> Ingredients { get; set; }
    private string searchString = "";
    private HashSet<Ingredient> selectedItems = new HashSet<Ingredient>();

    protected override void OnInitialized()
    {
        FillTable();
    }

    private bool FilterFunc(Ingredient element)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Name.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Desc.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{element.Id} {element.Name}".Contains(searchString))
            return true;
        return false;
    }

    private void FillTable()
    {
        IList<IngredientCategory> ingredientCategories = new List<IngredientCategory>() {
            new IngredientCategory() { Id = 1, Name = "Категория №1" },
            new IngredientCategory() { Id = 2, Name = "Категория №2" },
            new IngredientCategory() { Id = 3, Name = "Категория №3" },
            new IngredientCategory() { Id = 4, Name = "Категория №4" },
            new IngredientCategory() { Id = 5, Name = "Категория №5"}
            };
        IList<Ingredient> ingredients = new List<Ingredient>() {
            new Ingredient () { Name = "Реагент № 1" },
            new Ingredient () { Name = "Реагент № 2" },
            new Ingredient () { Name = "Реагент № 3" },
            new Ingredient () { Name = "Реагент № 4" },
            new Ingredient () { Name = "Реагент № 5" }
            };
        ingredientCategories[0].Ingredients = ingredients.ToList();
        ingredientCategories[1].Ingredients = ingredients.ToList();
        ingredientCategories[2].Ingredients = ingredients.ToList();
        ingredientCategories[3].Ingredients = ingredients.ToList();
        ingredientCategories[4].Ingredients = ingredients.ToList();
        Categories = ingredientCategories;
    }

    private void ShowBtnPress(int nr)
    {

    }
}