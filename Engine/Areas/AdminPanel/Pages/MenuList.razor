@page "/menu/list"
@inject IDbContextFactory<AppDbContext> DbFactory
@inject NavigationManager Nav
<div class="app-content pt-3 p-md-3 p-lg-4">
    <div class="container-xl">
        <div class="row g-3 mb-4 align-items-center justify-content-between">
            <_PageTitle MainTitle="Список меню" />
            <_SearchBar />
        </div><!--//row-->
        <_TableTemplate Items="menu" Context="menu" BtnAddLink="/menu/add">
            <TableHeader>
                <th><input class="form-check-input" type="checkbox" value="" id="settings-checkbox-3"></th>
                <th>Id</th>
                <th>Наименование</th>
                <th>Описание</th>
                <th>Позиция</th>
                <th>Элементы</th>
            </TableHeader>
            <RowTemplate>
                <td><input class="form-check-input" type="checkbox" value="" id="settings-checkbox-3"></td>
                <td>@menu.Id</td>
                <td>@menu.Title</td>
                <td>@menu.Desc</td>
                <td>@menu.Menutype</td>
                <td><NavLink Match="NavLinkMatch.Prefix" class="btn app-btn-secondary bg-gradient" href ="@($"/menu/items/{menu.Id}")">Редактировать</NavLink></td>
            </RowTemplate>
        </_TableTemplate>
    </div><!--//tab-pane-->
</div><!--//tab-content-->

@code {
    private int menuId { get; set; }
    private AppDbContext Context { get; set; }
    private bool Busy;

    private List<Menu> menu { get; set; }
    protected async override Task OnInitializedAsync()
    {
        Busy = true;

        try
        {
            Context = DbFactory.CreateDbContext();
            menu = await Context.Menu.ToListAsync();
        }
        finally
        {
            Busy = false;
        }

        await base.OnInitializedAsync();
    }

    public void Dispose()
    {
        Context?.Dispose();
    }
}
