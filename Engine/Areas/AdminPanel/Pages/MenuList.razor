@page "/menu/list"

@inject IDbContextFactory<AppDbContext> DbFactory
<div class="app-content pt-3 p-md-3 p-lg-4">
    <div class="container-xl">
        <div class="tab-content" id="orders-table-tab-content">
            <div class="tab-pane fade show active" id="orders-all" role="tabpanel" aria-labelledby="orders-all-tab">
                <div class="app-card app-card-orders-table shadow-sm mb-5">
                    <div class="app-card-body">
                        <div class="table-responsive">
                            <_ButtonBlock IsVisible="true"
                                          IsVisibleAdd="true"
                                          IsVisibleEdit="true"
                                          IsVisibleDelete="true"
                                          BtnAddLink="/menu/add"
                                          BtnEditLink="#"
                                          BtnDeleteLink="#" />
                            <MudTable Class="table app-table-hover mb-0 text-left" Items="@Elements" Hover="@hover" SortLabel="Сортировка по:" MultiSelection="true" Dense="@dense" @bind-SelectedItems="selectedItems" Filter="new Func<Menu,bool>(FilterFunc)">
                                <ToolBarContent>
                                    <MudText Typo="Typo.h6">Список меню</MudText>
                                    <MudSpacer />
                                    <MudTextField @bind-Value="searchString" Placeholder="Поиск" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Search" IconSize="Size.Medium" Class="mt-0"></MudTextField>
                                </ToolBarContent>
                                <HeaderContent>
                                    <MudTh><MudTableSortLabel InitialDirection="SortDirection.Ascending" SortBy="new Func<Menu, object>(x=>x.Id)">Id</MudTableSortLabel></MudTh>
                                    <MudTh><MudTableSortLabel Enabled="@enabled" SortBy="new Func<Menu, object>(x=>x.Title)">Наименование</MudTableSortLabel></MudTh>
                                    <MudTh><MudTableSortLabel SortBy="new Func<Menu, object>(x=>x.Desc)">Описание</MudTableSortLabel></MudTh>
                                    <MudTh><MudTableSortLabel SortBy="new Func<Menu, object>(x=>x.Menutype)">Позиция</MudTableSortLabel></MudTh>
                                    <MudTh>Элементы</MudTh>
                                </HeaderContent>
                                <RowTemplate>
                                    <MudTd DataLabel="Id">@context.Id</MudTd>
                                    <MudTd DataLabel="Title">@context.Title</MudTd>
                                    <MudTd DataLabel="Desc">@context.Desc</MudTd>
                                    <MudTd DataLabel="Menutype">@context.Menutype</MudTd>
                                    <MudTd>
                                        <MudButton Link="@($"/menu/items/{context.Id}")"
                                                   Target="_self"
                                                   Size="Size.Small"
                                                   Class="btn-sm app-btn-secondary"
                                                   Variant="Variant.Filled"
                                                   EndIcon="@Icons.Filled.Edit"
                                                   Color="Color.Primary"
                                                   Disabled=@disabled>
                                            Изменить
                                        </MudButton>
                                    </MudTd>
                                </RowTemplate>
                                <PagerContent>
                                    <MudTablePager Class="" PageSizeOptions="new int[]{20, 50, 100}" RowsPerPageString="Выводить по:" InfoFormat="{first_item}-{last_item} из {all_items}" />
                                </PagerContent>
                            </MudTable>
                            <MudText Inline="true">Выбранные значения: @(selectedItems==null ? "" : string.Join(", ", selectedItems.OrderBy(x=>x.Title).Select(x=>x.Title)))</MudText>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


@code {
    private string searchString = "";
    private Menu selectedItem = null;
    private bool disabled = false;
    private bool dense = false;
    private bool hover = true;
    private bool enabled = true;
    private IEnumerable<Menu> Elements = new List<Menu>();
    private bool Busy;
    private AppDbContext Context { get; set; }
    private HashSet<Menu> selectedItems = new HashSet<Menu>();

    protected override async Task OnInitializedAsync()
    {
        Busy = true;

        try
        {
            Context = DbFactory.CreateDbContext();
            Elements = await Context.Menu.ToListAsync();
        }
        finally
        {
            Busy = false;
        }

        await base.OnInitializedAsync();
    }
    private bool FilterFunc(Menu element)
    {
        if (string.IsNullOrWhiteSpace(searchString))
            return true;
        if (element.Title.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if (element.Desc.Contains(searchString, StringComparison.OrdinalIgnoreCase))
            return true;
        if ($"{element.Id} {element.Menutype}".Contains(searchString))
            return true;
        return false;
    }
}
